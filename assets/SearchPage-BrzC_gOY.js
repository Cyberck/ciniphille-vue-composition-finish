import{r as h,b as d,o as s,d as u,w as p,e as _,f as o,u as v,i as g,t as y,p as f,q as x,s as k,h as S,l as $,v as w,c,x as b,F as B,m as C,n as V,a as D}from"./index-76GLZNNC.js";const F={alt:"photo",class:"main__search-list-item-img"},N={class:"main__search-list-item-title"},T={__name:"SearchContent",props:{item:Object},setup(e){return(t,a)=>{const r=h("router-link"),i=d("lazy");return s(),u(r,{to:e.item.media_type+"/"+e.item.id,class:"main__search-list-item"},{default:p(()=>[_(o("img",F,null,512),[[i,v(g)+e.item.backdrop_path]]),o("h2",N,y(e.item.name||e.item.title),1)]),_:1},8,["to"])}}},U=f("search",{state:()=>({url:"https://api.themoviedb.org/3",result:null,error:""}),actions:{async searching(e){try{let t=await x.get(`${this.url}/search/multi?api_key=${k}&language=en-US&query=${e}`);this.result=t.data.results,console.log(this.result)}catch(t){console.error("Error while retrieving upcoming movies: "+t.message)}}}}),q={class:"main__search"},z={class:"container"},E={key:0,class:"main__search-list"},j={__name:"Search",setup(e){const t=U(),a=S(""),r=$(()=>t.result);let i=null;return w(a,l=>{clearTimeout(i),i=setTimeout(()=>{t.searching(l)},500)}),(l,m)=>(s(),c("div",q,[o("div",z,[_(o("input",{class:"main__search-input",placeholder:"Search films and serials...",type:"text","onUpdate:modelValue":m[0]||(m[0]=n=>a.value=n)},null,512),[[b,a.value]]),r.value?(s(),c("div",E,[(s(!0),c(B,null,C(r.value,n=>(s(),u(T,{key:n.id,item:n},null,8,["item"]))),128))])):V("",!0)])]))}},A={class:"main"},L={__name:"SearchPage",setup(e){return(t,a)=>(s(),c("main",A,[D(j)]))}};export{L as default};
//# sourceMappingURL=SearchPage-BrzC_gOY.js.map
